// Exported on: 2025-08-21 00:37:16
//@version=4
study("Swing Trade indicator",title="SMA call buy/sale",shorttitle = "swing trade indicator",precision=1, overlay=true)
ema_value=input(5)
sma_value=input(50)
ema1=ema(close,ema_value)
sma2= sma(close,sma_value)
rs=rsi(close,14)

mycolor= iff(rs>=85 or rs<=15,color.yellow,iff(low> sma2,color.lime,iff(high<sma2,color.red,color.yellow)))

hl=input(80,title="Overbought limit of RSI",step=1)
ll=input(20,title="Oversold limit of RSI",step=1)


buyexit= crossunder(rs,hl)
sellexit=crossover(rs,ll)


plot(sma2,title="Long SMA",color=mycolor,linewidth=2,transp=40)

plotshape(buyexit,title="RSI alert Bearish", style=shape.triangledown,
                 location=location.abovebar, color=color.teal, text="↓
 ↓")
plotshape(sellexit,title="RSI alert Bullish", style=shape.triangleup,
                 location=location.belowbar, color=color.teal, text="↑ 
 ↑")    
                 
sellcall= crossover(sma2,ema1)and open>close
buycall=crossunder (sma2,ema1)and high>sma2
                 
plotshape(buycall,title="BuyShape", style=shape.labelup,
                   location=location.belowbar, color=color.aqua, text="B",textcolor=color.white)
plotshape(sellcall,title="SellShape", style=shape.labeldown,
                   location=location.abovebar, color=color.red,transp=20, text="S",textcolor=color.black) 
                   
alertcondition(buyexit or sellexit,title="Reversal", message="Possible Reversal on Swing Signal Alert") 
alertcondition(buycall or sellcall,title="Buy/Sale Swing Signal", message="Swing Signal Entry Alert") 



//@version=5
strategy("Evolved Strategy", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=25)

// Primary indicator
primary = ta.sma(close, 15)

// Secondary indicator
secondary = ta.rsi(close, 7)

// Entry conditions
longCondition = ta.crossover(primary, 0)

// Exit conditions
strategy.entry("Long", strategy.long, when=longCondition)
strategy.exit("Exit", "Long", stop=strategy.position_avg_price * (1 - 0.045), limit=strategy.position_avg_price * (1 + 0.04))
